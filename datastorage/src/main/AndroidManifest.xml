<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.review.datastorage">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />

    <permission
        android:name="com.review.provider.permission.readwrite"
        android:protectionLevel="normal" />

    <application
        android:name=".App"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".file.FileActivity" />

        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="@string/file_authority"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/filepaths" />
        </provider>

        <activity android:name=".db.DBActivity" />
        <activity android:name=".contentprovider.ProviderActivity" />
        <activity android:name=".contentprovider.ProviderActivity2" android:process=":remote"/>

        <service
            android:name=".sp.SPProcessService"
            android:process=":remote" />

        <!--
android:exported 设置此provider是否可以被其他应用使用。
android:readPermission 从该provider读取数据需要的权限(query)
android:writePermission 从该provider写入数据需要的权限(insert、update、delete)
android:permission  读写该provider需要的权限 (query、insert、update、delete)
android:grantUriPermissions 临时权限标识，true时，意味着该provider下所有数据均可被临时使用；false时，则反之，
但可以通过设置<grant-uri-permission>标签来指定哪些路径可以被临时使用。这么说可能还是不容易理解，
我们举个例子，比如你开发了一个邮箱应用，其中含有附件需要第三方应用打开，但第三方应用又没有向你申请该附件的读权限，
但如果你设置了此标签，则可以在start第三方应用时，传入FLAG_GRANT_READ_URI_PERMISSION或FLAG_GRANT_WRITE_URI_PERMISSION来让第三方应用临时具有读写该数据的权限。
  intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
        -->
        <provider
            android:name="com.review.datastorage.contentprovider.TestProvider"
            android:authorities="com.review.provider"
            android:permission="com.review.provider.permission.readwrite"
            android:exported="true">
        </provider>
    </application>

</manifest>