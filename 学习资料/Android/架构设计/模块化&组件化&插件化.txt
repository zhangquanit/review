https://www.jianshu.com/p/35bc4f456759

1 模块化
将一个复杂业务实现，根据功能、页面或者其他进行不同粒度的划分程不同的模块，模块之间解耦，分别进行实现，也就是编程的模块化思想。

优点：
模块之间解耦，可以独立管理。

2、组件化
将一个app按照业务（功能）划分各个业务组件模块，组件之间是低耦合的，可以独立编译打包；也可以将组件打包到一个apk中。
优点：
每个模块可独立编译，提高了编译速度；
开发只负责自己的模块，还可以再做的隔离一些，每个业务线只可见自己业务模块的代码，避免了误修改和版本管理问题。
公共的Lib依然是个独立模块

与模块化的区别：是每个模块的角色的转换，一个组件可以独立编译打包，也可以作为lib集成到整个apk中

3、插件化
插件化是将一个apk根据业务功能拆分成不同的子apk（也就是不同的插件），每个子apk可以独立编译打包，最终发布上线的是集成后的apk。
在apk使用时，每个插件是动态加载的，插件也可以进行热修复和热更新.

从技术上讲，就是解决如何启动未安装的apk里面的类（主要是四大组件）。
主要问题：如何加载类、如何加载资源、如何管理组件生命周期。

与组件化的主要区别：
形式上的区别，组件化的单位是module，插件化的单位是apk
关注点不同，插件化更关注动态加载、热更新、热修复等‘插拔’技术。
